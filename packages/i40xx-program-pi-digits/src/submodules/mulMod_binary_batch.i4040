%include "memory.i4040"

# INPUT:
#   rr15 - variable number for first term and for result
#   rr14 - variable number for second term
#   memStatusCharVar[rr15] - first term (a)
#   memStatusCharVar[rr14] - second term (b)
#   STATUS_MEM_VARIABLE_MODULUS_INV
# OUTPUT:
#   memStatusCharVar[rr15] - result
# VARIABLES:
#   rr0..rr3 - 0x10000 - m
#   rr4..rr7 - b
#   rr8..rr11 - multipliedFactor
# NOTES:
#   - uses all registers
#   - clears carry flag
#   - first term should be always less than m
#   - second term is zero only if first term is zero too, so single check for fast path is enough
mulMod:
  FIM r0, $STATUS_MEM_VARIABLE_MODULUS_INV . 0
  SRC r0
  RD0
  XCH rr0
  RD1
  XCH rr1
  RD2
  XCH rr2
  RDM
  JCN z, mulMod_12bit                    # if (m < 0x1000)
  RD3
  XCH rr3                                # rr0..rr3 = 0x10000 - m

  SRC r7

  XCH rr15
  XCH rr14

  RD0
  XCH rr6
  RD1
  XCH rr7
  RD2
  XCH rr4
  RD3
  XCH rr5                                # rr6 = b[0], rr7 = b[1], rr4 = b[2], rr5 = b[3]

  SRC r7
  RD0
  XCH rr8
  RD1
  XCH rr9
  RD2
  XCH rr10
  RD3
  XCH rr11                               # multipliedFactor =  a

  CLB
  WR0
  WR1
  WR2
  WR3                                    # res = 0

  LD rr5
  JCN nz, mulMod_factor4
  LD rr4
  JCN nz, mulMod_factor3
  LD rr7
  JCN nz, mulMod_factor2
  LD rr6
  JUN mulMod_processLastNibble

mulMod_factor4:
  LD rr6
  JMS mulMod_processNibble
  LD rr7
  JMS mulMod_processNibble
  LD rr4
  JMS mulMod_processNibble
  LD rr5
  JUN mulMod_processLastNibble

mulMod_factor3:
  LD rr6
  JMS mulMod_processNibble
  LD rr7
  JMS mulMod_processNibble
  LD rr4
  JUN mulMod_processLastNibble

mulMod_factor2:
  LD rr6
  JMS mulMod_processNibble
  LD rr7
  JUN mulMod_processLastNibble

__location(0x3:0x00)
mulMod_processNibble_0:                   # 0b0000
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateMultipliedFactor

__location(0x3:0x8)
mulMod_processNibble:
  XCH rr12
  CLB
  XCH rr13
  JIN r6

__location(0x3:0x10)
mulMod_processNibble_1:                   # 0b0001
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateMultipliedFactor

__location(0x3:0x20)
mulMod_processNibble_2:                   # 0b0010
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateMultipliedFactor

__location(0x3:0x30)
mulMod_processNibble_3:                   # 0b0011
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateMultipliedFactor

__location(0x3:0x40)
mulMod_processNibble_4:                   # 0b0100
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateMultipliedFactor

__location(0x3:0x50)
mulMod_processNibble_5:                   # 0b0101
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateMultipliedFactor

__location(0x3:0x60)
mulMod_processNibble_6:                   # 0b0110
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateMultipliedFactor

__location(0x3:0x70)
mulMod_processNibble_7:                   # 0b0111
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateMultipliedFactor

__location(0x3:0x80)
mulMod_processNibble_8:                   # 0b1000
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JUN mulMod_updateMultipliedFactor

__location(0x3:0x90)
mulMod_processNibble_9:                   # 0b1001
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JUN mulMod_updateMultipliedFactor

__location(0x3:0xA0)
mulMod_processNibble_A:                   # 0b1010
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JUN mulMod_updateMultipliedFactor

__location(0x3:0xB0)
mulMod_processNibble_B:                   # 0b1011
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JUN mulMod_updateMultipliedFactor

__location(0x3:0xC0)
mulMod_processNibble_C:                   # 0b1100
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JUN mulMod_updateMultipliedFactor

__location(0x3:0xD0)
mulMod_processNibble_D:                   # 0b1101
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JUN mulMod_updateMultipliedFactor

__location(0x3:0xE0)
mulMod_processNibble_E:                   # 0b1110
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JUN mulMod_updateMultipliedFactor

__location(0x3:0xF0)
mulMod_processNibble_F:                   # 0b1111
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JUN mulMod_updateMultipliedFactor

__location(0x4:0x00)
mulMod_processLastNibble_0:                   # 0b0000
  BBL 0

__location(0x4:0x8)
mulMod_processLastNibble:
  XCH rr12
  CLB
  XCH rr13
  JIN r6

__location(0x4:0x10)
mulMod_processLastNibble_1:                   # 0b0001
  JUN mulMod_updateResultLast

__location(0x4:0x20)
mulMod_processLastNibble_2:                   # 0b0010
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0x30)
mulMod_processLastNibble_3:                   # 0b0011
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0x40)
mulMod_processLastNibble_4:                   # 0b0100
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0x50)
mulMod_processLastNibble_5:                   # 0b0101
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0x60)
mulMod_processLastNibble_6:                   # 0b0110
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0x70)
mulMod_processLastNibble_7:                   # 0b0111
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0x80)
mulMod_processLastNibble_8:                   # 0b1000
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0x90)
mulMod_processLastNibble_9:                   # 0b1001
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0xA0)
mulMod_processLastNibble_A:                   # 0b1010
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0xB0)
mulMod_processLastNibble_B:                   # 0b1011
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0xC0)
mulMod_processLastNibble_C:                   # 0b1100
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0xD0)
mulMod_processLastNibble_D:                   # 0b1101
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0xE0)
mulMod_processLastNibble_E:                   # 0b1110
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

__location(0x4:0xF0)
mulMod_processLastNibble_F:                   # 0b1111
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JMS mulMod_updateResult
  JMS mulMod_updateMultipliedFactor
  JUN mulMod_updateResultLast

# INPUT:
#   rr0..rr3 - m
#   rr8..rr11 - multipliedFactor
# OUTPUT:
#   rr8..rr11 - multipliedFactor
# VARIABLES:
#   rr12..rr15 - tmp
mulMod_updateMultipliedFactor:
  LD rr8
  ADD rr8
  XCH rr8
  LD rr9
  ADD rr9
  XCH rr9
  LD rr10
  ADD rr10
  XCH rr10
  LD rr11
  ADD rr11
  XCH rr11                                          # multipliedFactor = multipliedFactor + multipliedFactor

  LD rr8
  ADD rr0
  XCH rr12
  LD rr9
  ADD rr1
  XCH rr13
  LD rr10
  ADD rr2
  XCH rr14
  LD rr11
  ADD rr3
  XCH rr15                                          # tmp = multipliedFactor - m

  JCN nc, mulMod_updateMultipliedFactor_return      # if (tmp < 0)

  CLC
  LD rr12
  XCH rr8
  LD rr13
  XCH rr9
  LD rr14
  XCH rr10
  LD rr15
  XCH rr11                                          # multipliedFactor = tmp

mulMod_updateMultipliedFactor_return:
  BBL 0

# INPUT:
#   rr0..rr3 - m
#   rr8..rr11 - multipliedFactor
#   status characters in selected memory register - res
# OUTPUT:
#   status characters in selected memory register - res
# NOTES:
#   memory register already should be pre-selected
mulMod_updateResult:
  RD0
  ADD rr8
  WR0
  RD1
  ADD rr9
  WR1
  RD2
  ADD rr10
  WR2
  RD3
  ADD rr11
  WR3                                               # res = res + multipliedFactor

  RAL
  JCN c, mulMod_updateResult_return                 # if res < 0

  RD0
  ADD rr0
  WR0
  RD1
  ADD rr1
  WR1
  RD2
  ADD rr2
  WR2
  RD3
  ADD rr3
  WR3                                               # res = res - m
  BBL 0

mulMod_updateResult_return:
  CLC
  BBL 0

mulMod_updateResultLast:
  RD0
  ADD rr8
  WR0
  RD1
  ADD rr9
  WR1
  RD2
  ADD rr10
  WR2
  RD3
  ADD rr11
  WR3                                               # res = res + multipliedFactor

  RAL
  JCN nc, mulMod_updateResultLast_return            # if res >= 0

  CLC
  RD0
  SUB rr0
  CMC
  WR0
  RD1
  SUB rr1
  CMC
  WR1
  RD2
  SUB rr2
  CMC
  WR2
  RD3
  SUB rr3
  WR3                                               # res = res + m
  BBL 0

mulMod_updateResultLast_return:
  BBL 0

mulMod_12bit:
  SRC r7

  XCH rr15
  XCH rr14

  RD0
  XCH rr6
  RD1
  XCH rr7
  RD2
  XCH rr4
  RD3
  XCH rr5                                # rr6 = b[0], rr7 = b[1], rr4 = b[2], rr5 = b[3]

  SRC r7
  RD0
  XCH rr8
  RD1
  XCH rr9
  RD2
  XCH rr10                               # multipliedFactor =  a

  CLB
  WR3
  DAC
  WR0
  WR1
  WR2                                    # res = 0x0FFF

  LD rr5
  JCN nz, mulMod_12bit_factor4
  LD rr4
  JCN nz, mulMod_12bit_factor3
  LD rr7
  JCN nz, mulMod_12bit_factor2
  LD rr6
  JUN mulMod_12bit_processLastNibble

mulMod_12bit_factor4:
  LD rr6
  JMS mulMod_12bit_processNibble
  LD rr7
  JMS mulMod_12bit_processNibble
  LD rr4
  JMS mulMod_12bit_processNibble
  LD rr5
  JUN mulMod_12bit_processLastNibble

mulMod_12bit_factor3:
  LD rr6
  JMS mulMod_12bit_processNibble
  LD rr7
  JMS mulMod_12bit_processNibble
  LD rr4
  JUN mulMod_12bit_processLastNibble

mulMod_12bit_factor2:
  LD rr6
  JMS mulMod_12bit_processNibble
  LD rr7
  JUN mulMod_12bit_processLastNibble

__location(0x5:0x00)
mulMod_12bit_processNibble_0:                   # 0b0000
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0x8)
mulMod_12bit_processNibble:
  XCH rr12
  CLB
  XCH rr13
  JIN r6

__location(0x5:0x10)
mulMod_12bit_processNibble_1:                   # 0b0001
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0x20)
mulMod_12bit_processNibble_2:                   # 0b0010
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0x30)
mulMod_12bit_processNibble_3:                   # 0b0011
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0x40)
mulMod_12bit_processNibble_4:                   # 0b0100
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0x50)
mulMod_12bit_processNibble_5:                   # 0b0101
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0x60)
mulMod_12bit_processNibble_6:                   # 0b0110
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0x70)
mulMod_12bit_processNibble_7:                   # 0b0111
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0x80)
mulMod_12bit_processNibble_8:                   # 0b1000
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0x90)
mulMod_12bit_processNibble_9:                   # 0b1001
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0xA0)
mulMod_12bit_processNibble_A:                   # 0b1010
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0xB0)
mulMod_12bit_processNibble_B:                   # 0b1011
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0xC0)
mulMod_12bit_processNibble_C:                   # 0b1100
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0xD0)
mulMod_12bit_processNibble_D:                   # 0b1101
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0xE0)
mulMod_12bit_processNibble_E:                   # 0b1110
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x5:0xF0)
mulMod_12bit_processNibble_F:                   # 0b1111
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JUN mulMod_12bit_updateMultipliedFactor

__location(0x6:0x00)
mulMod_12bit_processLastNibble_0:                   # 0b0000
  BBL 0

__location(0x6:0x8)
mulMod_12bit_processLastNibble:
  XCH rr12
  CLB
  XCH rr13
  JIN r6

__location(0x6:0x10)
mulMod_12bit_processLastNibble_1:                   # 0b0001
  JUN mulMod_12bit_updateResultLast

__location(0x6:0x20)
mulMod_12bit_processLastNibble_2:                   # 0b0010
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0x30)
mulMod_12bit_processLastNibble_3:                   # 0b0011
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0x40)
mulMod_12bit_processLastNibble_4:                   # 0b0100
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0x50)
mulMod_12bit_processLastNibble_5:                   # 0b0101
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0x60)
mulMod_12bit_processLastNibble_6:                   # 0b0110
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0x70)
mulMod_12bit_processLastNibble_7:                   # 0b0111
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0x80)
mulMod_12bit_processLastNibble_8:                   # 0b1000
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0x90)
mulMod_12bit_processLastNibble_9:                   # 0b1001
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0xA0)
mulMod_12bit_processLastNibble_A:                   # 0b1010
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0xB0)
mulMod_12bit_processLastNibble_B:                   # 0b1011
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0xC0)
mulMod_12bit_processLastNibble_C:                   # 0b1100
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0xD0)
mulMod_12bit_processLastNibble_D:                   # 0b1101
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0xE0)
mulMod_12bit_processLastNibble_E:                   # 0b1110
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

__location(0x6:0xF0)
mulMod_12bit_processLastNibble_F:                   # 0b1111
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JMS mulMod_12bit_updateResult
  JMS mulMod_12bit_updateMultipliedFactor
  JUN mulMod_12bit_updateResultLast

# INPUT:
#   rr0..rr2 - m
#   rr8..rr10 - multipliedFactor
# OUTPUT:
#   rr8..rr10 - multipliedFactor
# VARIABLES:
#   rr12..rr14 - tmp
mulMod_12bit_updateMultipliedFactor:
  LD rr8
  ADD rr8
  XCH rr8
  LD rr9
  ADD rr9
  XCH rr9
  LD rr10
  ADD rr10
  XCH rr10                                                     # multipliedFactor = multipliedFactor + multipliedFactor
  JCN c, mulMod_12bit_updateMultipliedFactor_subtractModulus   # if (multipliedFactor > 0x1000)

  LD rr8
  ADD rr0
  XCH rr12
  LD rr9
  ADD rr1
  XCH rr13
  LD rr10
  ADD rr2
  XCH rr14                                                     # tmp = multipliedFactor - m

  JCN nc, mulMod_12bit_updateMultipliedFactor_return           # if (tmp < 0)

  CLC
  LD rr12
  XCH rr8
  LD rr13
  XCH rr9
  LD rr14
  XCH rr10                                                     # multipliedFactor = tmp

mulMod_12bit_updateMultipliedFactor_return:
  BBL 0

mulMod_12bit_updateMultipliedFactor_subtractModulus:
  CLC
  LD rr8
  ADD rr0
  XCH rr8
  LD rr9
  ADD rr1
  XCH rr9
  LD rr10
  ADD rr2
  XCH rr10                                                     # multipliedFactor = multipliedFactor - m
  CLC
  BBL 0

# INPUT:
#   rr0..rr2 - m
#   rr8..rr10 - multipliedFactor
#   status characters in selected memory register - res
# OUTPUT:
#   status characters in selected memory register - res
# NOTES:
#   memory register already should be pre-selected
mulMod_12bit_updateResult:
  RD0
  ADD rr8
  WR0
  RD1
  ADD rr9
  WR1
  RD2
  ADD rr10
  WR2                                               # res = res + multipliedFactor
  JCN nc, mulMod_12bit_updateResult_negative        # if (res < 0)

  CLC
  RD0
  ADD rr0
  WR0
  RD1
  ADD rr1
  WR1
  RD2
  ADD rr2
  WR2                                               # res = res - m
  CLC
  BBL 0

mulMod_12bit_updateResult_negative:
  BBL 0

mulMod_12bit_updateResultLast:
  STC
  RD0
  ADD rr8
  WR0
  RD1
  ADD rr9
  WR1
  RD2
  ADD rr10
  WR2                                               # res = res + multipliedFactor + 1
  JCN c, mulMod_12bit_updateResultLast_return       # if res >= 0

  RD0
  SUB rr0
  CMC
  WR0
  RD1
  SUB rr1
  CMC
  WR1
  RD2
  SUB rr2
  WR2                                               # res = res + m + 1
  BBL 0

mulMod_12bit_updateResultLast_return:
  CLC
  BBL 0
