%include "memory.i4040"

# INPUT:
#   rr0..rr3 - first addend (a)
#   rr8..rr11 - second addend (b)
#   memMainVar[0x07] - divisor (m)
# OUTPUT:
#   rr0..rr3 - result = (a + b) % m
# VARIABLES:
#   rr4..rr7 - tmp
addMod:
  LD rr8
  ADD rr0
  XCH rr0
  LD rr9
  ADD rr1
  XCH rr1
  LD rr10
  ADD rr2
  XCH rr2
  LD rr11
  ADD rr3
  XCH rr3                # res = a + b
  FIM r6, 0x70
  SRC r6
  LD rr0
  SBM
  XCH rr4
  CMC
  INC rr13
  SRC r6
  LD rr1
  SBM
  XCH rr5
  CMC
  INC rr13
  SRC r6
  LD rr2
  SBM
  XCH rr6
  CMC
  INC rr13
  SRC r6
  LD rr3
  SBM
  XCH rr7                # tmp = res - m
  JCN nc, addMod_return  # if (tmp < 0)
  CLC
  LD rr4
  XCH rr0
  LD rr5
  XCH rr1
  LD rr6
  XCH rr2
  LD rr7
  XCH rr3                # res = tmp
addMod_return:
  BBL 0

# INPUT:
#   rr0..rr3 - m
#   STATUS_MEM_VARIABLE_F
#   STATUS_MEM_VARIABLE_F_COMPUTATION_FK
# OUTPUT:
#   STATUS_MEM_VARIABLE_F
# VARIABLES:
#   rr8..rr11 - fk
#   rr12..rr15 - tmp
addMod_fPlusFk:
  RD0
  XCH rr8
  RD1
  XCH rr9
  RD2
  XCH rr10
  RD3
  XCH rr11                                          # fk

  FIM r6, $STATUS_MEM_VARIABLE_F . 0
  SRC r6
  RD0
  ADD rr8
  WR0
  RD1
  ADD rr9
  WR1
  RD2
  ADD rr10
  WR2
  RD3
  ADD rr11
  WR3                                               # f = f + fk

  RD0
  SUB rr0
  CMC
  XCH rr12
  RD1
  SUB rr1
  CMC
  XCH rr13
  RD2
  SUB rr2
  CMC
  XCH rr14
  RD3
  SUB rr3
  XCH rr15                                          # tmp = f - m

  JCN nc, addMod_fPlusFk_return                     # if (tmp < 0)

  CLC
  LD rr12
  WR0
  LD rr13
  WR1
  LD rr14
  WR2
  LD rr15
  WR3                                               # f = tmp

addMod_fPlusFk_return:
  BBL 0
