%include "memory.i4040"

%define SHIFT_DIRECTION_RIGHT   0x0
%define SHIFT_DIRECTION_LEFT    0x8

# INPUT:
#   rr2 - shift value
#   rr3 - 0x0 for right shift or 0x8 for left shift
#   acc - value
# OUTPUT:
#   rr12 or rr13 - shifted value, depends on shift direction
__location(0x5:0x00)
shift4ByR1:
  JIN r1

# INPUT:
#   rr4 - shift value
#   rr5 - 0x0 for right shift or 0x8 for left shift
#   acc - value
# OUTPUT:
#   rr12 or rr13 - shifted value, depends on shift direction
__location(0x5:0x02)
shift4ByR2:
  JIN r2

# INPUT:
#   rr10 - shift value
#   rr11 - 0x0 for right shift or 0x8 for left shift
#   acc - value
# OUTPUT:
#   rr12 or rr13 - shifted value, depends on shift direction
__location(0x5:0x04)
shift4ByR5:
  JIN r5

# INPUT:
#   rr14 - shift value
#   rr15 - 0x0 for right shift or 0x8 for left shift
#   acc - value
# OUTPUT:
#   rr12 or rr13 - shifted value, depends on shift direction
__location(0x5:0x06)
shift4ByR7:
  JIN r7

# INPUT:
#   rr8 - shift value
#   rr9 - 0x0 for right shift or 0x8 for left shift
#   acc - value
# OUTPUT:
#   rr12 or rr13 - shifted value, depends on shift direction
__location(0x5:0x08)
shift4ByR4:
  JIN r4

__location(0x5:0x10)
shift_right_1:
  RAR
  CLC
  XCH rr12
  BBL 0

__location(0x5:0x18)
shift_left_1:
  RAL
  CLC
  XCH rr13
  BBL 0

__location(0x5:0x20)
shift_right_2:
  RAR
  CLC
  RAR
  CLC
  XCH rr12
  BBL 0

__location(0x5:0x28)
shift_left_2:
  RAL
  CLC
  RAL
  CLC
  XCH rr13
  BBL 0

__location(0x5:0x30)
shift_right_3:
  RAL
  LDM 0x0
  RAL
  XCH rr12
  BBL 0

__location(0x5:0x38)
shift_left_3:
  RAR
  LDM 0x0
  RAR
  XCH rr13
  BBL 0

__location(0x5:0x40)
shift_right_4:
  LDM 0x0
  XCH rr12
  BBL 0

__location(0x5:0x48)
shift_left_4:
  LDM 0x0
  XCH rr13
  BBL 0
